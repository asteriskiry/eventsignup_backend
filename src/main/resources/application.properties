spring.application.name = Asteriski Event signup system
spring.data.mongodb.database=eventsignup
spring.data.mongodb.host=${MONGO_HOST}
logging.level.root=INFO
spring.profiles.active=dev
de.flapdoodle.mongodb.embedded.version=4.11.0
spring.data.mongodb.auto-index-creation=true
logging.file.name = /tmp/eventsignup.log
spring.security.filter.order=10
# mail config
spring.mail.host=localhost
spring.mail.port=25
spring.mail.username=username
spring.mail.password=password
# Quartz config
org.quartz.jobStore.mongoUri=mongodb://${MONGO_HOST}:27017
org.quartz.jobStore.dbName=eventsignup

# Other properties
#spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
#spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
# custom config keys
fi.asteriski.config.event.root-path-bannerimg=/tmp/
fi.asteriski.config.email.default-sender-address=noreply@localhost
fi.asteriski.config.archiving.days-to-archive-past-events=180
fi.asteriski.config.security.allowedCorsDomain=http://localhost:3000
fi.asteriski.config.email.baseUrl=https://ilmot.asteriski.fi

# keycloak
keycloak.realm=asteriski
keycloak.auth-server-url=${KEYCLOAK_URL}
keycloak.resource=eventsignup_backend
keycloak.bearer-only=true
keycloak.use-resource-role-mappings=false
keycloak.principal-attribute=preferred_username

## keycloak
spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:9090/realms/asteriski

spring.security.oauth2.client.registration.external.provider=external
spring.security.oauth2.client.registration.external.client-name=eventsignup_backend
spring.security.oauth2.client.registration.external.client-id=eventsignup_backend
spring.security.oauth2.client.registration.external.client-secret=(put your client secret here)
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code
