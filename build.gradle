plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.springdoc.openapi-gradle-plugin" version "1.7.0"
    id "com.github.node-gradle.node" version "7.0.2"
    id "com.diffplug.spotless" version "6.25.0"
    id 'idea' // comment out if you don't use IntelliJ IDEA
    //id 'eclipse' // uncomment if you use Eclipse
}

group = 'fi.asteriski'
version = '1.0'
java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://jcenter.bintray.com/"
    }
}

node {
    download = true
    nodeProjectDir = file("${project.projectDir}/typesPlugin")
}

openApi {
    apiDocsUrl.set("http://localhost:8080/v1/api-docs")
    customBootRun {
        args.set(["--spring.profiles.active=special"])
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // Unfortunately not maintained. See https://github.com/michaelklishin/quartz-mongodb
    implementation "com.novemberain:quartz-mongodb:2.2.0-rc2"
    implementation 'org.keycloak:keycloak-spring-boot-starter:23.0.4'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:6.2.1'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.12.2'
}

tasks.named('test') {
    useJUnitPlatform()
    maxHeapSize = '4G'
}

bootJar {
    archiveFileName = 'eventsignup.jar'
}

tasks.register('generateTsTypes', NpxTask) {
    dependsOn('generateOpenApiDocs')
    command = "openapi-typescript"
    args = ["${project.projectDir}/build/openapi.json", "--output", "${project.projectDir}/typesPlugin/src/generated/events-types.ts"]
}

tasks.register('generateTypesVersionNumber', NpmTask) {
    args = ["version", new Date().format('yyyyMMdd') + "." + new Date().format('HHmm') + ".0"]
}

tasks.register('publishTypesPlugin', NpmTask) {
    args = ["publish"]
}

tasks.named("forkedSpringBootRun") {
    mustRunAfter("nodeSetup")
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore', '*.properties'

        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        importOrder()
        removeUnusedImports()
        palantirJavaFormat('2.40.0').formatJavadoc(true)
    }
}
